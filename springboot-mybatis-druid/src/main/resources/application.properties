# MyBatis 配置
#spring.datasource.url=jdbc:mysql://localhost:3306/exercise?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=root
#spring.datasource.password=xccloud
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
mybatis.type-aliases-package=com.wuicelone.smd.entity
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml


#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/exercise?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username=root
#spring.datasource.password=xccloud
#
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
## 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间,单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
## 打开PSCache,并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=false
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
## 配置监控统计拦截的filters,去掉后监控界面sql无法统计,'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
## 通过connectProperties属性来打开mergeSql功能;慢SQL记录
#spring.datasource.connectionProperties='druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000'
## 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.url = jdbc:mysql://localhost:3306/exercise?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username = root
spring.datasource.password = xccloud
spring.datasource.driver-class-name = com.mysql.jdbc.Driver

#初始化连接大小
spring.datasource.initialSize = 5
#最小连接池数量
spring.datasource.minIdle = 5
#最大连接池数量
spring.datasource.maxActive = 20
#获取连接时最大等待时间，单位毫秒
spring.datasource.maxWait = 60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000
#配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000
#测试连接
spring.datasource.validationQuery = select 'x'
#申请连接的时候检测，建议配置为true，不影响性能，并且保证安全性
spring.datasource.testWhileIdle = true
#获取连接时执行检测，建议关闭，影响性能
spring.datasource.testOnBorrow = false
#归还连接时执行检测，建议关闭，影响性能
spring.datasource.testOnReturn = false
#是否开启PSCache，PSCache对支持游标的数据库性能提升巨大，oracle建议开启，mysql下建议关闭
spring.datasource.poolPreparedStatements = true
#开启poolPreparedStatements后生效
spring.datasource.maxOpenPreparedStatements = 20
#配置扩展插件，常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入
spring.datasource.filters = stat,wall,log4j
#通过connectProperties属性来打开mergeSql功能;慢SQL记录
spring.druid.connectionProperties: 'druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000'

spring.datasource.logSlowSql=true

